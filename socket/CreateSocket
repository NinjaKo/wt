package wt.socket;

import android.util.Log;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;
import wt.walkietalkie.manager.Node;

public class CreateSocket
{
  private ConnectToGroupOwner connectToGroupOwner;
  private String groupOwnerAddress;
  private boolean isGroupOwner;
  private boolean isRunning = false;
  private String myFreqID;
  private String myName;
  private NeighborBroadcaster neighborBroadcaster;
  private Node parent;
  private HashMap<String, IPSeq> peerIPAddress = new HashMap();
  private RunAudioServerAccept runAudioServerAccept;
  private RunServerBeaconSocketAccept runServerBeaconSocketAcc;

  private boolean addPeerIP(String paramString1, String paramString2, int paramInt, boolean paramBoolean1, boolean paramBoolean2)
  {
    if ((IPSeq)this.peerIPAddress.get(paramString1) == null)
    {
      Log.d("Create Socket", "new peer IP address avaliable:" + paramString1 + ", " + paramString2);
      IPSeq localIPSeq = new IPSeq(paramString2, -1, paramInt);
      synchronized (this.peerIPAddress)
      {
        this.peerIPAddress.put(paramString1, localIPSeq);
        return true;
      }
    }
    if (paramBoolean2)
      updatePeerSeq(paramString1, paramInt);
    if (paramBoolean1)
      updatePeerIP(paramString1, paramString2);
    return false;
  }

  private int byteArrayToInt(byte[] paramArrayOfByte)
  {
    return (paramArrayOfByte[0] << 24) + ((0xFF & paramArrayOfByte[1]) << 16) + ((0xFF & paramArrayOfByte[2]) << 8) + (0xFF & paramArrayOfByte[3]);
  }

  private void forwardMsg(String paramString, int paramInt1, int paramInt2, byte[] paramArrayOfByte)
  {
    Iterator localIterator = this.peerIPAddress.keySet().iterator();
    while (true)
    {
      if (!localIterator.hasNext())
        return;
      String str = (String)localIterator.next();
      if (str.compareToIgnoreCase(paramString) == 0)
        continue;
      sendMsg(str, paramInt1, paramInt2, paramArrayOfByte);
    }
  }

  private byte[] intToByteArray(int paramInt)
  {
    byte[] arrayOfByte = new byte[4];
    arrayOfByte[0] = (byte)(paramInt >>> 24);
    arrayOfByte[1] = (byte)(paramInt >>> 16);
    arrayOfByte[2] = (byte)(paramInt >>> 8);
    arrayOfByte[3] = (byte)paramInt;
    return arrayOfByte;
  }

  private boolean isPeerSeqInorder(String paramString, int paramInt1, int paramInt2)
  {
    IPSeq localIPSeq = (IPSeq)this.peerIPAddress.get(paramString);
    if (localIPSeq != null)
    {
      Log.d("Create Socket", "Check:" + paramString + ", InitFlg_org:" + localIPSeq.getInitFlg() + " seq:" + paramInt2 + ">" + localIPSeq.getSeq());
      if (paramInt1 != localIPSeq.getInitFlg())
        localIPSeq.setInitFlg(paramInt1);
      do
        return true;
      while (localIPSeq.getSeq() < paramInt2);
      return false;
    }
    return false;
  }

  private void updatePeerIP(String paramString1, String paramString2)
  {
    IPSeq localIPSeq = (IPSeq)this.peerIPAddress.get(paramString1);
    Log.d("Create Socket", "update peer IP address:" + paramString1 + ", " + paramString2);
    if (localIPSeq != null)
      localIPSeq.setIP(paramString2);
  }

  private void updatePeerSeq(String paramString, int paramInt)
  {
    IPSeq localIPSeq = (IPSeq)this.peerIPAddress.get(paramString);
    Log.d("Create Socket", "update peer seq:" + paramString + ", " + paramInt);
    if (localIPSeq != null)
      localIPSeq.setSeq(paramInt);
  }

  public void sendMsg(String paramString, int paramInt1, int paramInt2, byte[] paramArrayOfByte)
  {
    new String(paramArrayOfByte);
    Log.d("Create Audio Socket", "Send message: Dest=" + paramString + " flg=" + paramInt1 + " seq=" + paramInt2);
    byte[] arrayOfByte1 = intToByteArray(paramInt1);
    byte[] arrayOfByte2 = intToByteArray(paramInt2);
    byte[] arrayOfByte3 = intToByteArray(this.myName.getBytes().length);
    byte[] arrayOfByte4 = this.myName.getBytes();
    byte[] arrayOfByte5 = intToByteArray(paramArrayOfByte.length);
    IPSeq localIPSeq = (IPSeq)this.peerIPAddress.get(paramString);
    if ((localIPSeq != null) && (localIPSeq.getIP() != null));
    try
    {
      Socket localSocket = new Socket(localIPSeq.getIP(), 4567);
      OutputStream localOutputStream = localSocket.getOutputStream();
      localOutputStream.write(arrayOfByte1);
      localOutputStream.write(arrayOfByte2);
      localOutputStream.write(arrayOfByte3);
      localOutputStream.write(arrayOfByte4);
      localOutputStream.write(arrayOfByte5);
      localOutputStream.write(paramArrayOfByte);
      localOutputStream.flush();
      localSocket.close();
      return;
    }
    catch (UnknownHostException localUnknownHostException)
    {
      localUnknownHostException.printStackTrace();
      return;
    }
    catch (IOException localIOException)
    {
      localIOException.printStackTrace();
    }
  }

  public void setFID(String paramString)
  {
    this.myFreqID = paramString;
    if (this.isRunning)
      this.neighborBroadcaster.interrupt();
  }

  public void setInfo(Node paramNode, String paramString1, String paramString2, boolean paramBoolean, String paramString3, String paramString4)
  {
    this.isGroupOwner = paramBoolean;
    this.myName = paramString1;
    this.myFreqID = paramString2;
    this.parent = paramNode;
    this.groupOwnerAddress = paramString4;
  }

  public void startRun()
  {
    this.isRunning = true;
    Log.d("Create Socket", "run");
    this.runServerBeaconSocketAcc = new RunServerBeaconSocketAccept();
    this.runServerBeaconSocketAcc.start();
    if (!this.isGroupOwner)
    {
      this.connectToGroupOwner = new ConnectToGroupOwner();
      this.connectToGroupOwner.start();
    }
    this.neighborBroadcaster = new NeighborBroadcaster();
    this.neighborBroadcaster.start();
    this.runAudioServerAccept = new RunAudioServerAccept();
    this.runAudioServerAccept.start();
  }

  public void stopRun()
  {
    if (this.isRunning)
    {
      Log.d("Create Socket", "stop Run");
      this.neighborBroadcaster.stopBroadcastThread();
      this.runServerBeaconSocketAcc.closeServerBeaconSocketAccept();
      this.runAudioServerAccept.stopAudioServerAccept();
    }
    try
    {
      this.runServerBeaconSocketAcc.serverBSocket.close();
      this.runAudioServerAccept.serverASocket.close();
      return;
    }
    catch (IOException localIOException)
    {
      localIOException.printStackTrace();
    }
  }

  private class ConnectToGroupOwner extends Thread
  {
    public ConnectToGroupOwner()
    {
      super();
    }

    public void run()
    {
      Log.d("Create Socket", "Connect to Group Owner");
      Socket localSocket = new Socket();
      try
      {
        localSocket.bind(null);
        localSocket.connect(new InetSocketAddress(CreateSocket.this.groupOwnerAddress, 1234), 5000);
        Packet localPacket = new Packet(1, CreateSocket.this.myName, CreateSocket.this.myFreqID);
        new ObjectOutputStream(localSocket.getOutputStream()).writeObject(localPacket);
        Log.d("Create Socket", "Send beacon to gOwner ");
        localSocket.close();
        return;
      }
      catch (IOException localIOException)
      {
        localIOException.printStackTrace();
      }
    }
  }

  private class NeighborBroadcaster extends Thread
  {
    private volatile boolean keepBroadcasting = true;

    public NeighborBroadcaster()
    {
      super();
    }

    private String catNeighborIP()
    {
      String str1 = "";
      Collection localCollection = CreateSocket.this.peerIPAddress.values();
      Set localSet = CreateSocket.this.peerIPAddress.keySet();
      Iterator localIterator1 = localCollection.iterator();
      Iterator localIterator2 = localSet.iterator();
      while (true)
      {
        if ((!localIterator1.hasNext()) || (!localIterator2.hasNext()))
          return str1;
        IPSeq localIPSeq = (IPSeq)localIterator1.next();
        String str2 = (String)localIterator2.next();
        if (str1.length() != 0)
        {
          str1 = str1 + "," + str2 + "," + localIPSeq.getIP();
          continue;
        }
        str1 = str1 + str2 + "," + localIPSeq.getIP();
      }
    }

    // ERROR //
    public void run()
    {
      // Byte code:
      //   0: aconst_null
      //   1: astore_1
      //   2: aload_0
      //   3: getfield 19	wt/socket/CreateSocket$NeighborBroadcaster:keepBroadcasting	Z
      //   6: ifne +4 -> 10
      //   9: return
      //   10: aload_0
      //   11: invokespecial 90	wt/socket/CreateSocket$NeighborBroadcaster:catNeighborIP	()Ljava/lang/String;
      //   14: astore 5
      //   16: aload_0
      //   17: getfield 12	wt/socket/CreateSocket$NeighborBroadcaster:this$0	Lwt/socket/CreateSocket;
      //   20: invokestatic 29	wt/socket/CreateSocket:access$5	(Lwt/socket/CreateSocket;)Ljava/util/HashMap;
      //   23: invokevirtual 35	java/util/HashMap:values	()Ljava/util/Collection;
      //   26: invokeinterface 45 1 0
      //   31: astore 6
      //   33: aload_1
      //   34: astore 7
      //   36: aload 6
      //   38: invokeinterface 51 1 0
      //   43: ifne +15 -> 58
      //   46: ldc2_w 91
      //   49: invokestatic 96	wt/socket/CreateSocket$NeighborBroadcaster:sleep	(J)V
      //   52: aload 7
      //   54: astore_1
      //   55: goto -53 -> 2
      //   58: aload 6
      //   60: invokeinterface 55 1 0
      //   65: checkcast 57	wt/socket/IPSeq
      //   68: astore 9
      //   70: new 98	java/net/Socket
      //   73: dup
      //   74: aload 9
      //   76: invokevirtual 79	wt/socket/IPSeq:getIP	()Ljava/lang/String;
      //   79: sipush 1234
      //   82: invokespecial 101	java/net/Socket:<init>	(Ljava/lang/String;I)V
      //   85: astore_1
      //   86: new 103	wt/socket/Packet
      //   89: dup
      //   90: iconst_1
      //   91: aload_0
      //   92: getfield 12	wt/socket/CreateSocket$NeighborBroadcaster:this$0	Lwt/socket/CreateSocket;
      //   95: invokestatic 107	wt/socket/CreateSocket:access$1	(Lwt/socket/CreateSocket;)Ljava/lang/String;
      //   98: aload_0
      //   99: getfield 12	wt/socket/CreateSocket$NeighborBroadcaster:this$0	Lwt/socket/CreateSocket;
      //   102: invokestatic 110	wt/socket/CreateSocket:access$2	(Lwt/socket/CreateSocket;)Ljava/lang/String;
      //   105: invokespecial 113	wt/socket/Packet:<init>	(ILjava/lang/String;Ljava/lang/String;)V
      //   108: astore 10
      //   110: new 115	java/io/ObjectOutputStream
      //   113: dup
      //   114: aload_1
      //   115: invokevirtual 119	java/net/Socket:getOutputStream	()Ljava/io/OutputStream;
      //   118: invokespecial 122	java/io/ObjectOutputStream:<init>	(Ljava/io/OutputStream;)V
      //   121: aload 10
      //   123: invokevirtual 126	java/io/ObjectOutputStream:writeObject	(Ljava/lang/Object;)V
      //   126: new 103	wt/socket/Packet
      //   129: dup
      //   130: iconst_2
      //   131: aload_0
      //   132: getfield 12	wt/socket/CreateSocket$NeighborBroadcaster:this$0	Lwt/socket/CreateSocket;
      //   135: invokestatic 107	wt/socket/CreateSocket:access$1	(Lwt/socket/CreateSocket;)Ljava/lang/String;
      //   138: aload 5
      //   140: invokespecial 113	wt/socket/Packet:<init>	(ILjava/lang/String;Ljava/lang/String;)V
      //   143: astore 11
      //   145: new 115	java/io/ObjectOutputStream
      //   148: dup
      //   149: aload_1
      //   150: invokevirtual 119	java/net/Socket:getOutputStream	()Ljava/io/OutputStream;
      //   153: invokespecial 122	java/io/ObjectOutputStream:<init>	(Ljava/io/OutputStream;)V
      //   156: aload 11
      //   158: invokevirtual 126	java/io/ObjectOutputStream:writeObject	(Ljava/lang/Object;)V
      //   161: ldc 128
      //   163: new 65	java/lang/StringBuilder
      //   166: dup
      //   167: ldc 130
      //   169: invokespecial 70	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   172: aload_0
      //   173: getfield 12	wt/socket/CreateSocket$NeighborBroadcaster:this$0	Lwt/socket/CreateSocket;
      //   176: invokestatic 107	wt/socket/CreateSocket:access$1	(Lwt/socket/CreateSocket;)Ljava/lang/String;
      //   179: invokevirtual 76	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   182: ldc 132
      //   184: invokevirtual 76	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   187: aload 9
      //   189: invokevirtual 79	wt/socket/IPSeq:getIP	()Ljava/lang/String;
      //   192: invokevirtual 76	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   195: invokevirtual 82	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   198: invokestatic 138	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
      //   201: pop
      //   202: ldc 128
      //   204: new 65	java/lang/StringBuilder
      //   207: dup
      //   208: ldc 130
      //   210: invokespecial 70	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   213: aload_0
      //   214: getfield 12	wt/socket/CreateSocket$NeighborBroadcaster:this$0	Lwt/socket/CreateSocket;
      //   217: invokestatic 107	wt/socket/CreateSocket:access$1	(Lwt/socket/CreateSocket;)Ljava/lang/String;
      //   220: invokevirtual 76	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   223: ldc 140
      //   225: invokevirtual 76	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   228: aload 5
      //   230: invokevirtual 76	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   233: ldc 142
      //   235: invokevirtual 76	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   238: aload 9
      //   240: invokevirtual 79	wt/socket/IPSeq:getIP	()Ljava/lang/String;
      //   243: invokevirtual 76	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   246: invokevirtual 82	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   249: invokestatic 138	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
      //   252: pop
      //   253: aload_1
      //   254: invokevirtual 145	java/net/Socket:close	()V
      //   257: aload_1
      //   258: astore 7
      //   260: goto -224 -> 36
      //   263: astore_3
      //   264: aload_0
      //   265: getfield 19	wt/socket/CreateSocket$NeighborBroadcaster:keepBroadcasting	Z
      //   268: ifne -266 -> 2
      //   271: aload_1
      //   272: ifnull -270 -> 2
      //   275: aload_1
      //   276: invokevirtual 145	java/net/Socket:close	()V
      //   279: goto -277 -> 2
      //   282: astore 4
      //   284: aload 4
      //   286: invokevirtual 148	java/io/IOException:printStackTrace	()V
      //   289: goto -287 -> 2
      //   292: astore_2
      //   293: aload_2
      //   294: invokevirtual 148	java/io/IOException:printStackTrace	()V
      //   297: goto -295 -> 2
      //   300: astore_2
      //   301: aload 7
      //   303: astore_1
      //   304: goto -11 -> 293
      //   307: astore 8
      //   309: aload 7
      //   311: astore_1
      //   312: goto -48 -> 264
      //
      // Exception table:
      //   from	to	target	type
      //   10	33	263	java/lang/InterruptedException
      //   86	257	263	java/lang/InterruptedException
      //   275	279	282	java/io/IOException
      //   10	33	292	java/io/IOException
      //   86	257	292	java/io/IOException
      //   36	52	300	java/io/IOException
      //   58	86	300	java/io/IOException
      //   36	52	307	java/lang/InterruptedException
      //   58	86	307	java/lang/InterruptedException
    }

    public void stopBroadcastThread()
    {
      this.keepBroadcasting = false;
      interrupt();
    }
  }

  private class RunAudioServerAccept extends Thread
  {
    private volatile boolean keepAccepting = true;
    ServerSocket serverASocket = null;

    public RunAudioServerAccept()
    {
      super();
    }

    // ERROR //
    public void run()
    {
      // Byte code:
      //   0: aload_0
      //   1: new 33	java/net/ServerSocket
      //   4: dup
      //   5: sipush 4567
      //   8: invokespecial 36	java/net/ServerSocket:<init>	(I)V
      //   11: putfield 23	wt/socket/CreateSocket$RunAudioServerAccept:serverASocket	Ljava/net/ServerSocket;
      //   14: ldc 38
      //   16: ldc 40
      //   18: invokestatic 46	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
      //   21: pop
      //   22: aload_0
      //   23: getfield 21	wt/socket/CreateSocket$RunAudioServerAccept:keepAccepting	Z
      //   26: istore_3
      //   27: iload_3
      //   28: ifne +4 -> 32
      //   31: return
      //   32: aload_0
      //   33: getfield 23	wt/socket/CreateSocket$RunAudioServerAccept:serverASocket	Ljava/net/ServerSocket;
      //   36: invokevirtual 50	java/net/ServerSocket:accept	()Ljava/net/Socket;
      //   39: astore 29
      //   41: aload 29
      //   43: astore 5
      //   45: aload 5
      //   47: ifnull -25 -> 22
      //   50: iconst_4
      //   51: newarray byte
      //   53: astore 6
      //   55: iconst_4
      //   56: newarray byte
      //   58: astore 7
      //   60: iconst_4
      //   61: newarray byte
      //   63: astore 8
      //   65: iconst_4
      //   66: newarray byte
      //   68: astore 9
      //   70: ldc 38
      //   72: ldc 52
      //   74: invokestatic 46	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
      //   77: pop
      //   78: aload 5
      //   80: invokevirtual 58	java/net/Socket:getInputStream	()Ljava/io/InputStream;
      //   83: astore 13
      //   85: aload 13
      //   87: aload 6
      //   89: invokevirtual 64	java/io/InputStream:read	([B)I
      //   92: pop
      //   93: aload_0
      //   94: getfield 14	wt/socket/CreateSocket$RunAudioServerAccept:this$0	Lwt/socket/CreateSocket;
      //   97: aload 6
      //   99: invokestatic 70	wt/socket/CreateSocket:access$6	(Lwt/socket/CreateSocket;[B)I
      //   102: istore 15
      //   104: aload 13
      //   106: aload 7
      //   108: invokevirtual 64	java/io/InputStream:read	([B)I
      //   111: pop
      //   112: aload_0
      //   113: getfield 14	wt/socket/CreateSocket$RunAudioServerAccept:this$0	Lwt/socket/CreateSocket;
      //   116: aload 7
      //   118: invokestatic 70	wt/socket/CreateSocket:access$6	(Lwt/socket/CreateSocket;[B)I
      //   121: istore 17
      //   123: aload 13
      //   125: aload 8
      //   127: invokevirtual 64	java/io/InputStream:read	([B)I
      //   130: pop
      //   131: aload_0
      //   132: getfield 14	wt/socket/CreateSocket$RunAudioServerAccept:this$0	Lwt/socket/CreateSocket;
      //   135: aload 8
      //   137: invokestatic 70	wt/socket/CreateSocket:access$6	(Lwt/socket/CreateSocket;[B)I
      //   140: newarray byte
      //   142: astore 19
      //   144: aload 13
      //   146: aload 19
      //   148: invokevirtual 64	java/io/InputStream:read	([B)I
      //   151: pop
      //   152: aload 13
      //   154: aload 9
      //   156: invokevirtual 64	java/io/InputStream:read	([B)I
      //   159: pop
      //   160: aload_0
      //   161: getfield 14	wt/socket/CreateSocket$RunAudioServerAccept:this$0	Lwt/socket/CreateSocket;
      //   164: aload 9
      //   166: invokestatic 70	wt/socket/CreateSocket:access$6	(Lwt/socket/CreateSocket;[B)I
      //   169: newarray byte
      //   171: astore 22
      //   173: aload 13
      //   175: aload 22
      //   177: invokevirtual 64	java/io/InputStream:read	([B)I
      //   180: pop
      //   181: new 72	java/lang/String
      //   184: dup
      //   185: aload 19
      //   187: invokespecial 75	java/lang/String:<init>	([B)V
      //   190: astore 24
      //   192: aload_0
      //   193: getfield 14	wt/socket/CreateSocket$RunAudioServerAccept:this$0	Lwt/socket/CreateSocket;
      //   196: aload 24
      //   198: iload 15
      //   200: iload 17
      //   202: invokestatic 79	wt/socket/CreateSocket:access$7	(Lwt/socket/CreateSocket;Ljava/lang/String;II)Z
      //   205: ifeq +141 -> 346
      //   208: aload_0
      //   209: getfield 14	wt/socket/CreateSocket$RunAudioServerAccept:this$0	Lwt/socket/CreateSocket;
      //   212: aload 24
      //   214: iload 17
      //   216: invokestatic 83	wt/socket/CreateSocket:access$8	(Lwt/socket/CreateSocket;Ljava/lang/String;I)V
      //   219: aload_0
      //   220: getfield 14	wt/socket/CreateSocket$RunAudioServerAccept:this$0	Lwt/socket/CreateSocket;
      //   223: invokestatic 87	wt/socket/CreateSocket:access$4	(Lwt/socket/CreateSocket;)Lwt/walkietalkie/manager/Node;
      //   226: aload 24
      //   228: aload 22
      //   230: invokevirtual 93	wt/walkietalkie/manager/Node:notifyAboutDataReceived	(Ljava/lang/String;[B)V
      //   233: aload_0
      //   234: getfield 14	wt/socket/CreateSocket$RunAudioServerAccept:this$0	Lwt/socket/CreateSocket;
      //   237: aload 24
      //   239: iload 15
      //   241: iload 17
      //   243: aload 22
      //   245: invokestatic 97	wt/socket/CreateSocket:access$9	(Lwt/socket/CreateSocket;Ljava/lang/String;II[B)V
      //   248: new 72	java/lang/String
      //   251: dup
      //   252: aload 22
      //   254: invokespecial 75	java/lang/String:<init>	([B)V
      //   257: pop
      //   258: ldc 38
      //   260: new 99	java/lang/StringBuilder
      //   263: dup
      //   264: ldc 101
      //   266: invokespecial 102	java/lang/StringBuilder:<init>	(Ljava/lang/String;)V
      //   269: iload 17
      //   271: invokevirtual 106	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
      //   274: ldc 108
      //   276: invokevirtual 111	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
      //   279: iload 15
      //   281: invokevirtual 106	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
      //   284: invokevirtual 115	java/lang/StringBuilder:toString	()Ljava/lang/String;
      //   287: invokestatic 46	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
      //   290: pop
      //   291: aload 13
      //   293: invokevirtual 118	java/io/InputStream:close	()V
      //   296: aload 5
      //   298: invokevirtual 119	java/net/Socket:close	()V
      //   301: goto -279 -> 22
      //   304: astore 12
      //   306: aload 12
      //   308: invokevirtual 122	java/io/StreamCorruptedException:printStackTrace	()V
      //   311: goto -289 -> 22
      //   314: astore_1
      //   315: aload_1
      //   316: invokevirtual 123	java/io/IOException:printStackTrace	()V
      //   319: return
      //   320: astore 28
      //   322: aload 28
      //   324: invokevirtual 124	java/net/SocketException:printStackTrace	()V
      //   327: aconst_null
      //   328: astore 5
      //   330: goto -285 -> 45
      //   333: astore 4
      //   335: aload 4
      //   337: invokevirtual 123	java/io/IOException:printStackTrace	()V
      //   340: aconst_null
      //   341: astore 5
      //   343: goto -298 -> 45
      //   346: ldc 38
      //   348: ldc 126
      //   350: invokestatic 46	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
      //   353: pop
      //   354: goto -106 -> 248
      //   357: astore 11
      //   359: aload 11
      //   361: invokevirtual 123	java/io/IOException:printStackTrace	()V
      //   364: goto -342 -> 22
      //
      // Exception table:
      //   from	to	target	type
      //   78	248	304	java/io/StreamCorruptedException
      //   248	301	304	java/io/StreamCorruptedException
      //   346	354	304	java/io/StreamCorruptedException
      //   0	22	314	java/io/IOException
      //   22	27	314	java/io/IOException
      //   50	78	314	java/io/IOException
      //   306	311	314	java/io/IOException
      //   322	327	314	java/io/IOException
      //   335	340	314	java/io/IOException
      //   359	364	314	java/io/IOException
      //   32	41	320	java/net/SocketException
      //   32	41	333	java/io/IOException
      //   78	248	357	java/io/IOException
      //   248	301	357	java/io/IOException
      //   346	354	357	java/io/IOException
    }

    public void stopAudioServerAccept()
    {
      this.keepAccepting = false;
      interrupt();
    }
  }

  private class RunServerBeaconSocketAccept extends Thread
  {
    private volatile boolean keepAccepting = true;
    ServerSocket serverBSocket = null;

    public RunServerBeaconSocketAccept()
    {
      super();
    }

    private void parseIPMsg(String paramString)
    {
      String[] arrayOfString = paramString.split(",");
      for (int i = 0; ; i += 2)
      {
        if (i >= arrayOfString.length)
          return;
        if (arrayOfString[i].compareToIgnoreCase(CreateSocket.this.myName) == 0)
          continue;
        Log.d("Beacon Address", "Receive Address:" + arrayOfString[i] + "," + arrayOfString[(i + 1)]);
        CreateSocket.this.addPeerIP(arrayOfString[i], arrayOfString[(i + 1)], -1, true, false);
      }
    }

    public void closeServerBeaconSocketAccept()
    {
      this.keepAccepting = false;
      interrupt();
    }

    // ERROR //
    public void run()
    {
      // Byte code:
      //   0: ldc 83
      //   2: ldc 85
      //   4: invokestatic 63	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
      //   7: pop
      //   8: aload_0
      //   9: new 87	java/net/ServerSocket
      //   12: dup
      //   13: sipush 1234
      //   16: invokespecial 90	java/net/ServerSocket:<init>	(I)V
      //   19: putfield 23	wt/socket/CreateSocket$RunServerBeaconSocketAccept:serverBSocket	Ljava/net/ServerSocket;
      //   22: ldc 83
      //   24: ldc 92
      //   26: invokestatic 63	android/util/Log:d	(Ljava/lang/String;Ljava/lang/String;)I
      //   29: pop
      //   30: aload_0
      //   31: getfield 21	wt/socket/CreateSocket$RunServerBeaconSocketAccept:keepAccepting	Z
      //   34: istore 4
      //   36: iload 4
      //   38: ifne +4 -> 42
      //   41: return
      //   42: aload_0
      //   43: getfield 23	wt/socket/CreateSocket$RunServerBeaconSocketAccept:serverBSocket	Ljava/net/ServerSocket;
      //   46: invokevirtual 96	java/net/ServerSocket:accept	()Ljava/net/Socket;
      //   49: astore 14
      //   51: aload 14
      //   53: astore 6
      //   55: aload 6
      //   57: ifnull -27 -> 30
      //   60: new 98	java/io/ObjectInputStream
      //   63: dup
      //   64: aload 6
      //   66: invokevirtual 104	java/net/Socket:getInputStream	()Ljava/io/InputStream;
      //   69: invokespecial 107	java/io/ObjectInputStream:<init>	(Ljava/io/InputStream;)V
      //   72: invokevirtual 111	java/io/ObjectInputStream:readObject	()Ljava/lang/Object;
      //   75: checkcast 113	wt/socket/Packet
      //   78: astore 10
      //   80: aload_0
      //   81: getfield 14	wt/socket/CreateSocket$RunServerBeaconSocketAccept:this$0	Lwt/socket/CreateSocket;
      //   84: aload 10
      //   86: invokevirtual 116	wt/socket/Packet:getTalker	()Ljava/lang/String;
      //   89: aload 6
      //   91: invokevirtual 120	java/net/Socket:getInetAddress	()Ljava/net/InetAddress;
      //   94: invokevirtual 125	java/net/InetAddress:getHostAddress	()Ljava/lang/String;
      //   97: iconst_m1
      //   98: iconst_1
      //   99: iconst_0
      //   100: invokestatic 67	wt/socket/CreateSocket:access$3	(Lwt/socket/CreateSocket;Ljava/lang/String;Ljava/lang/String;IZZ)Z
      //   103: pop
      //   104: aload 10
      //   106: invokevirtual 129	wt/socket/Packet:getType	()I
      //   109: iconst_1
      //   110: if_icmpne +82 -> 192
      //   113: aload_0
      //   114: getfield 14	wt/socket/CreateSocket$RunServerBeaconSocketAccept:this$0	Lwt/socket/CreateSocket;
      //   117: invokestatic 133	wt/socket/CreateSocket:access$4	(Lwt/socket/CreateSocket;)Lwt/walkietalkie/manager/Node;
      //   120: aload 10
      //   122: invokevirtual 116	wt/socket/Packet:getTalker	()Ljava/lang/String;
      //   125: aload 10
      //   127: invokevirtual 136	wt/socket/Packet:getMsg	()Ljava/lang/String;
      //   130: invokevirtual 142	wt/walkietalkie/manager/Node:addClientFIDs	(Ljava/lang/String;Ljava/lang/String;)Z
      //   133: pop
      //   134: getstatic 148	java/lang/System:out	Ljava/io/PrintStream;
      //   137: aload 6
      //   139: invokevirtual 154	java/io/PrintStream:println	(Ljava/lang/Object;)V
      //   142: aload 6
      //   144: invokevirtual 157	java/net/Socket:close	()V
      //   147: goto -117 -> 30
      //   150: astore 9
      //   152: aload 9
      //   154: invokevirtual 160	java/lang/ClassNotFoundException:printStackTrace	()V
      //   157: goto -127 -> 30
      //   160: astore_2
      //   161: aload_2
      //   162: invokevirtual 161	java/io/IOException:printStackTrace	()V
      //   165: return
      //   166: astore 13
      //   168: aload 13
      //   170: invokevirtual 162	java/net/SocketException:printStackTrace	()V
      //   173: aconst_null
      //   174: astore 6
      //   176: goto -121 -> 55
      //   179: astore 5
      //   181: aload 5
      //   183: invokevirtual 161	java/io/IOException:printStackTrace	()V
      //   186: aconst_null
      //   187: astore 6
      //   189: goto -134 -> 55
      //   192: aload 10
      //   194: invokevirtual 129	wt/socket/Packet:getType	()I
      //   197: iconst_2
      //   198: if_icmpne -64 -> 134
      //   201: aload_0
      //   202: aload 10
      //   204: invokevirtual 136	wt/socket/Packet:getMsg	()Ljava/lang/String;
      //   207: invokespecial 164	wt/socket/CreateSocket$RunServerBeaconSocketAccept:parseIPMsg	(Ljava/lang/String;)V
      //   210: goto -76 -> 134
      //   213: astore 8
      //   215: aload 8
      //   217: invokevirtual 165	java/io/StreamCorruptedException:printStackTrace	()V
      //   220: goto -190 -> 30
      //   223: astore 7
      //   225: aload 7
      //   227: invokevirtual 161	java/io/IOException:printStackTrace	()V
      //   230: goto -200 -> 30
      //
      // Exception table:
      //   from	to	target	type
      //   60	134	150	java/lang/ClassNotFoundException
      //   134	147	150	java/lang/ClassNotFoundException
      //   192	210	150	java/lang/ClassNotFoundException
      //   8	30	160	java/io/IOException
      //   30	36	160	java/io/IOException
      //   152	157	160	java/io/IOException
      //   168	173	160	java/io/IOException
      //   181	186	160	java/io/IOException
      //   215	220	160	java/io/IOException
      //   225	230	160	java/io/IOException
      //   42	51	166	java/net/SocketException
      //   42	51	179	java/io/IOException
      //   60	134	213	java/io/StreamCorruptedException
      //   134	147	213	java/io/StreamCorruptedException
      //   192	210	213	java/io/StreamCorruptedException
      //   60	134	223	java/io/IOException
      //   134	147	223	java/io/IOException
      //   192	210	223	java/io/IOException
    }
  }
}
